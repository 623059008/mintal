{"ast":null,"code":"import { css as _css } from \"styled-components\";\nvar _jsxFileName = \"/Users/yunawu/\\u5B66\\u4E60/pitt/pittChallenge/treact-ui/src/components/pricing/TwoPlansWithDurationSwitcher.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ReactDOM from 'react-dom';\n//eslint-disable-line\nimport { SectionHeading, Subheading as SubheadingBase } from \"components/misc/Headings.js\";\nimport { SectionDescription } from \"components/misc/Typography.js\";\nimport { PrimaryButton as PrimaryButtonBase } from \"components/misc/Buttons.js\";\nimport { Container, ContentWithPaddingXl } from \"components/misc/Layouts.js\";\nimport { ReactComponent as SvgDecoratorBlob1 } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/svg-decorator-blob-6.svg\";\nimport { ReactComponent as SvgDecoratorBlob2 } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/svg-decorator-blob-7.svg\";\nimport * as Survey from \"survey-react\";\nimport \"./styles.css\";\nimport \"survey-react/survey.css\"; // const HeaderContainer = tw.div`w-full flex flex-col items-center`;\n// const Subheading = tw(SubheadingBase)`mb-4`;\n// const Heading = tw(SectionHeading)`w-full`;\n// const Description = tw(SectionDescription)`w-full text-center`;\n// const PlanDurationSwitcher = tw.div`block w-full max-w-xs sm:inline-block sm:w-auto border-2 rounded-full px-1 py-1 mt-8`;\n// const SwitchButton = styled.button`\n//   ${tw`w-1/2 sm:w-32 px-4 sm:px-8 py-3 rounded-full focus:outline-none text-sm font-bold text-gray-700 transition duration-300`}\n//   ${props => props.active && tw`bg-primary-500 text-gray-100`}\n// `;\n// const DecoratorBlob1 = styled(SvgDecoratorBlob1)`\n//   ${tw`pointer-events-none -z-20 absolute left-0 bottom-0 h-64 w-64 opacity-25 transform -translate-x-2/3 -translate-y-1/2`}\n// `;\n// const DecoratorBlob2 = styled(SvgDecoratorBlob2)`\n//   ${tw`pointer-events-none -z-20 absolute right-0 top-0 h-64 w-64 opacity-25 transform translate-x-2/3 translate-y-1/2 fill-current text-teal-300`}\n// `;\n// Survey.JsonObject.metaData.addProperty(\"itemvalue\", { name: \"score:number\" });\n// Survey.matrixDropdownColumnTypes.rating = {\n//   properties: [\"rateValues\"]\n// };\n// export default ({\n//   subheading = \"Survey\",\n//   heading = \"Take Easy and do it\",\n//   description = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n//   plans = null,\n//   primaryButtonText = \"Buy Now\",\n//   planDurations = [\n//     {\n//       text: \"Month\",\n//       switcherText: \"Monthly\",\n//     },\n//     {\n//       text: \"Year\",\n//       switcherText: \"Yearly\",\n//     }\n//   ]\n// }) => {\n//   const defaultPlans = [\n//     {\n//       name: \"Free Plan\",\n//       durationPrices: [\"$0\", \"$0\"],\n//       mainFeature: \"For Personal Blogs\",\n//       features: [\"30 Templates\", \"7 Landing Pages\", \"12 Internal Pages\", \"Basic Assistance\"]\n//     },\n//     {\n//       name: \"Pro Plan\",\n//       durationPrices: [\"$49\", \"$499\"],\n//       mainFeature: \"Suited for Production Websites\",\n//       features: [\"60 Templates\", \"8 Landing Pages\", \"22 Internal Pages\", \"Priority Assistance\", \"Lifetime Updates\"],\n//       featured: true\n//     }\n//   ];\n//   if (!plans) plans = defaultPlans;\n//   const [activeDurationIndex, setActiveDurationIndex] = useState(0);\n//   return (\n//     <Container>\n//       <ContentWithPaddingXl>\n//         <HeaderContainer>\n//           {subheading && <Subheading>{subheading}</Subheading>}\n//           <Heading>{heading}</Heading>\n//           {description && <Description>{description}</Description>}\n//         <PlanDurationSwitcher>\n//           {planDurations.map((planDuration, index) => (\n//             <SwitchButton active={activeDurationIndex === index} key={index} onClick={() => setActiveDurationIndex(index)}>{planDuration.switcherText}</SwitchButton>\n//           ))}\n//         </PlanDurationSwitcher>\n//         </HeaderContainer>\n//       </ContentWithPaddingXl>\n//       <DecoratorBlob1 />\n//       <DecoratorBlob2 />\n//     <script src=\"https://unpkg.com/survey-react\"></script>\n//     </Container>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSurvey.JsonObject.metaData.addProperty(\"itemvalue\", {\n  name: \"score:number\"\n});\nSurvey.matrixDropdownColumnTypes.rating = {\n  properties: [\"rateValues\"]\n};\n\nclass SurveyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.preetycheckbox = survey => {\n      survey.getAllQuestions().forEach(question => {\n        if (question.getType() === \"checkbox\") {\n          question.renderAs = \"prettycheckbox\";\n        }\n\n        question.updateCustomWidget();\n      });\n    };\n\n    this.onUpdateQuestionCssClasses = (survey, options) => {\n      var classes = options.cssClasses;\n      classes.title = \"sq-title\";\n\n      if (options.question.getType() === \"imagepicker\") {\n        classes.root += \" sq-root-ip\";\n        classes.item += \" sq-item-ip\";\n        classes.itemChecked += \" sq-itemchecked-ip\";\n        classes.itemInline += \" sq-iteminline-ip\";\n        classes.label += \" sq-label-ip\";\n        classes.itemControl += \" sq-itemcontrol-ip\";\n        classes.image += \" sq-image-ip\";\n        classes.itemText += \" sq-itemtext-ip\";\n        classes.clearButton += \" sq-clearbutton-ip\";\n        classes.column += \" sq-column-ip\";\n      } else {\n        //classes.mainRoot += \" sv_qstn\";\n        classes.root += \" sq-root\";\n        classes.item += \" sq-item\";\n        classes.label += \" sq-label\";\n\n        if (options.question.isRequired) {\n          classes.title += \" sq-title-required\";\n          classes.root += \" sq-root-required\";\n        }\n\n        if (options.question.getType() === \"checkbox\") {\n          classes.root += \" sq-root-cb\";\n        }\n        /* if (options.question.getType() === \"matrixdropdown\") {\n          classes.root += \" sq-root-rat\";\n        }*/\n\n\n        if (options.question.getType() === \"radiogroup\") {\n          classes.root += \" sq-root-cb\";\n        }\n      }\n    };\n\n    this.state = {\n      isCompleted: false\n    };\n    this.onCompleteComponent = this.onCompleteComponent.bind(this);\n  }\n  /*********** prettey checkbox**************** */\n\n\n  onCompleteComponent() {\n    this.setState({\n      isCompleted: true\n    });\n  }\n\n  render() {\n    let json = {\n      pages: [{\n        name: \"page4\",\n        elements: [{\n          type: \"panel\",\n          name: \"panel4\",\n          elements: [{\n            type: \"checkbox\",\n            name: \"question0\",\n            title: \"Please rank these impacts by fears. Where 1 is the impact your fear the most and 5 you fear the least. Please select numbers in front of the impact text accordingly\",\n            renderAs: \"prettycheckbox\",\n            choices: [\"Privacy\", \"Confidentiality\", \"Integrity\", \"Availability\", \"Authenticity\"]\n          }, {\n            type: \"radiogroup\",\n            name: \"question0\",\n            renderAs: \"prettycheckbox\",\n            title: \"Please rank these impacts by fears. Where 1 is the impact your fear the most and 5 you fear the least. Please select numbers in front of the impact text accordingly\",\n            choices: [\"Privacy\", \"Confidentiality\", \"Integrity\", \"Availability\", \"Authenticity\"]\n          }]\n        }]\n      }, {\n        name: \"page4\",\n        elements: [{\n          type: \"panel\",\n          name: \"panel4\",\n          elements: [{\n            type: \"matrixdropdown\",\n            name: \"question2\",\n            title: \"Please rank these impacts by fears. Where 1 is the impact your fear the most and 5 you fear the least. Please select numbers in front of the impact text accordingly\",\n            columns: [{\n              cellType: \"rating\",\n              \" name\": \"level\",\n              title: \"Level\",\n              minRateDescription: \"most\",\n              maxRateDescription: \"least\"\n            }, {\n              name: \"comments\",\n              title: \"Comments/Precision\",\n              cellType: \"text\"\n            }],\n            choices: [1],\n            cellType: \"checkbox\",\n            rows: [\"Privacy\", \"Confidentiality\", \"Integrity\", \"Availability\", \"Authenticity\"]\n          }]\n        }]\n      }, {\n        name: \"page5\",\n        elements: [{\n          type: \"panel\",\n          name: \"panel5\",\n          elements: [{\n            type: \"matrixdropdown\",\n            name: \"question3\",\n            title: \"Please rank these impacts by fears. Where 1 is the impact your fear the most and 3 you fear the least. Please select numbers in front of the impact text accordingly\",\n            columns: [{\n              cellType: \"rating\",\n              \" name\": \"level\",\n              title: \"Level\",\n              rateValues: [{\n                value: \"value1\",\n                text: \"1\"\n              }, {\n                value: \"value2\",\n                text: \"2\"\n              }, {\n                value: \"value3\",\n                text: \"3\"\n              }]\n            }, {\n              name: \"comments2\",\n              title: \"Comments/Precision\",\n              cellType: \"text\"\n            }],\n            choices: [1],\n            cellType: \"checkbox\",\n            rows: [\"Safety\", \"Reputation & Financial Loss\", \"Threat Scale\"]\n          }]\n        }]\n      }, {\n        name: \"page6\",\n        elements: [{\n          type: \"panel\",\n          name: \"panel6\",\n          elements: [{\n            type: \"multipletext\",\n            name: \"pricelimit\",\n            title: \"From a market point of view: \",\n            colCount: 2,\n            items: [{\n              name: \"region\",\n              title: \"What regions are you willing to sell the solution/products to?\"\n            }, {\n              name: \"business\",\n              title: \"What type of business are you willing to sell the solutio/product to? \"\n            }]\n          }, {\n            type: \"comment\",\n            name: \"comment2\",\n            title: \"Comments/Precision\"\n          }]\n        }]\n      }, {\n        name: \"page7\",\n        title: \"General Considerations\",\n        elements: [{\n          type: \"panel\",\n          name: \"panel7\",\n          elements: [{\n            type: \"checkbox\",\n            name: \"car\",\n            title: \"🔧Why are considering an evaluation/certification of your Solution/Product?\",\n            // isRequired: true,\n            hasOther: true,\n            otherText: \"Others\",\n            colCount: 4,\n            // \"choicesOrder\": \"asc\",\n            choices: [{\n              value: \"government\",\n              text: \"Government bid \"\n            }, {\n              value: \"customer\",\n              text: \"Customer requirement\"\n            }, {\n              value: \"nice\",\n              text: \"Nice to have \"\n            }, {\n              value: \"temperature\",\n              text: \"Temperature\"\n            }, {\n              value: \"improve\",\n              text: \"Improve security\"\n            }, {\n              value: \"marketing\",\n              text: \"Marketing\"\n            }, {\n              value: \"notsure\",\n              text: \"I'm not sure\"\n            }]\n          }, {\n            name: \"comment3\",\n            title: \"Please comment:\",\n            type: \"comment\" //\"startWithNewLine\": false,\n\n          }]\n        }]\n      }\n      /******************************* End of Likelihood ********************************** */\n      ],\n      showQuestionNumbers: \"off\",\n      completedHtml: \"<p><h4>Security Profile Results !!</h4></p>\"\n    };\n    var surveyRender = !this.state.isCompleted ? /*#__PURE__*/_jsxDEV(Survey.Survey, {\n      json: json,\n      showCompletedPage: false,\n      onComplete: this.onCompleteComponent,\n      preetycheckbox: this.preetycheckbox //onUpdateQuestionCssClasses={this.onUpdateQuestionCssClasses}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this) : null;\n    var onCompleteComponent = this.state.isCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"The component after onComplete event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [surveyRender, onCompleteComponent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SurveyJS react example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Checkbox - none of the above and select all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SurveyComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 441,\n  columnNumber: 17\n}, this), rootElement);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yunawu/学习/pitt/pittChallenge/treact-ui/src/components/pricing/TwoPlansWithDurationSwitcher.js"],"names":["React","useState","styled","ReactDOM","SectionHeading","Subheading","SubheadingBase","SectionDescription","PrimaryButton","PrimaryButtonBase","Container","ContentWithPaddingXl","Survey","JsonObject","metaData","addProperty","name","matrixDropdownColumnTypes","rating","properties","SurveyComponent","Component","constructor","props","preetycheckbox","survey","getAllQuestions","forEach","question","getType","renderAs","updateCustomWidget","onUpdateQuestionCssClasses","options","classes","cssClasses","title","root","item","itemChecked","itemInline","label","itemControl","image","itemText","clearButton","column","isRequired","state","isCompleted","onCompleteComponent","bind","setState","render","json","pages","elements","type","choices","columns","cellType","minRateDescription","maxRateDescription","rows","rateValues","value","text","colCount","items","hasOther","otherText","showQuestionNumbers","completedHtml","surveyRender","App","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport ReactDOM from 'react-dom';\nimport { css } from \"styled-components/macro\"; //eslint-disable-line\nimport { SectionHeading, Subheading as SubheadingBase } from \"components/misc/Headings.js\";\nimport { SectionDescription } from \"components/misc/Typography.js\";\nimport { PrimaryButton as PrimaryButtonBase } from \"components/misc/Buttons.js\";\nimport { Container, ContentWithPaddingXl } from \"components/misc/Layouts.js\";\nimport { ReactComponent as SvgDecoratorBlob1 } from \"images/svg-decorator-blob-6.svg\";\nimport { ReactComponent as SvgDecoratorBlob2 } from \"images/svg-decorator-blob-7.svg\";\nimport * as Survey from \"survey-react\";\nimport \"./styles.css\";\nimport \"survey-react/survey.css\";\n// const HeaderContainer = tw.div`w-full flex flex-col items-center`;\n// const Subheading = tw(SubheadingBase)`mb-4`;\n// const Heading = tw(SectionHeading)`w-full`;\n// const Description = tw(SectionDescription)`w-full text-center`;\n\n// const PlanDurationSwitcher = tw.div`block w-full max-w-xs sm:inline-block sm:w-auto border-2 rounded-full px-1 py-1 mt-8`;\n// const SwitchButton = styled.button`\n//   ${tw`w-1/2 sm:w-32 px-4 sm:px-8 py-3 rounded-full focus:outline-none text-sm font-bold text-gray-700 transition duration-300`}\n//   ${props => props.active && tw`bg-primary-500 text-gray-100`}\n// `;\n\n\n// const DecoratorBlob1 = styled(SvgDecoratorBlob1)`\n//   ${tw`pointer-events-none -z-20 absolute left-0 bottom-0 h-64 w-64 opacity-25 transform -translate-x-2/3 -translate-y-1/2`}\n// `;\n// const DecoratorBlob2 = styled(SvgDecoratorBlob2)`\n//   ${tw`pointer-events-none -z-20 absolute right-0 top-0 h-64 w-64 opacity-25 transform translate-x-2/3 translate-y-1/2 fill-current text-teal-300`}\n// `;\n// Survey.JsonObject.metaData.addProperty(\"itemvalue\", { name: \"score:number\" });\n// Survey.matrixDropdownColumnTypes.rating = {\n//   properties: [\"rateValues\"]\n// };\n\n// export default ({\n//   subheading = \"Survey\",\n//   heading = \"Take Easy and do it\",\n//   description = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n//   plans = null,\n//   primaryButtonText = \"Buy Now\",\n//   planDurations = [\n//     {\n//       text: \"Month\",\n//       switcherText: \"Monthly\",\n//     },\n//     {\n//       text: \"Year\",\n//       switcherText: \"Yearly\",\n//     }\n//   ]\n// }) => {\n  \n\n\n//   const defaultPlans = [\n//     {\n//       name: \"Free Plan\",\n//       durationPrices: [\"$0\", \"$0\"],\n//       mainFeature: \"For Personal Blogs\",\n//       features: [\"30 Templates\", \"7 Landing Pages\", \"12 Internal Pages\", \"Basic Assistance\"]\n//     },\n//     {\n//       name: \"Pro Plan\",\n//       durationPrices: [\"$49\", \"$499\"],\n//       mainFeature: \"Suited for Production Websites\",\n//       features: [\"60 Templates\", \"8 Landing Pages\", \"22 Internal Pages\", \"Priority Assistance\", \"Lifetime Updates\"],\n//       featured: true\n//     }\n//   ];\n\n//   if (!plans) plans = defaultPlans;\n\n//   const [activeDurationIndex, setActiveDurationIndex] = useState(0);\n\n//   return (\n//     <Container>\n//       <ContentWithPaddingXl>\n//         <HeaderContainer>\n//           {subheading && <Subheading>{subheading}</Subheading>}\n//           <Heading>{heading}</Heading>\n//           {description && <Description>{description}</Description>}\n//         <PlanDurationSwitcher>\n//           {planDurations.map((planDuration, index) => (\n//             <SwitchButton active={activeDurationIndex === index} key={index} onClick={() => setActiveDurationIndex(index)}>{planDuration.switcherText}</SwitchButton>\n//           ))}\n//         </PlanDurationSwitcher>\n//         </HeaderContainer>\n\n//       </ContentWithPaddingXl>\n//       <DecoratorBlob1 />\n//       <DecoratorBlob2 />\n//     <script src=\"https://unpkg.com/survey-react\"></script>\n//     </Container>\n//   );\n// };\n\n\nSurvey.JsonObject.metaData.addProperty(\"itemvalue\", { name: \"score:number\" });\nSurvey.matrixDropdownColumnTypes.rating = {\n  properties: [\"rateValues\"]\n};\nclass SurveyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isCompleted: false };\n\n    this.onCompleteComponent = this.onCompleteComponent.bind(this);\n  }\n\n  /*********** prettey checkbox**************** */\n\n  preetycheckbox = survey => {\n    survey.getAllQuestions().forEach(question => {\n      if (question.getType() === \"checkbox\") {\n        question.renderAs = \"prettycheckbox\";\n      }\n      question.updateCustomWidget();\n    });\n  };\n\n  onUpdateQuestionCssClasses = (survey, options) => {\n    var classes = options.cssClasses;\n\n    classes.title = \"sq-title\";\n\n    if (options.question.getType() === \"imagepicker\") {\n      classes.root += \" sq-root-ip\";\n      classes.item += \" sq-item-ip\";\n      classes.itemChecked += \" sq-itemchecked-ip\";\n      classes.itemInline += \" sq-iteminline-ip\";\n      classes.label += \" sq-label-ip\";\n      classes.itemControl += \" sq-itemcontrol-ip\";\n      classes.image += \" sq-image-ip\";\n      classes.itemText += \" sq-itemtext-ip\";\n      classes.clearButton += \" sq-clearbutton-ip\";\n      classes.column += \" sq-column-ip\";\n    } else {\n      //classes.mainRoot += \" sv_qstn\";\n      classes.root += \" sq-root\";\n      classes.item += \" sq-item\";\n      classes.label += \" sq-label\";\n\n      if (options.question.isRequired) {\n        classes.title += \" sq-title-required\";\n        classes.root += \" sq-root-required\";\n      }\n\n      if (options.question.getType() === \"checkbox\") {\n        classes.root += \" sq-root-cb\";\n      }\n      /* if (options.question.getType() === \"matrixdropdown\") {\n        classes.root += \" sq-root-rat\";\n    }*/\n\n      if (options.question.getType() === \"radiogroup\") {\n        classes.root += \" sq-root-cb\";\n      }\n    }\n  };\n\n  onCompleteComponent() {\n    this.setState({ isCompleted: true });\n  }\n  render() {\n    let json = {\n      pages: [\n        {\n          name: \"page4\",\n          elements: [\n            {\n              type: \"panel\",\n              name: \"panel4\",\n\n              elements: [\n                {\n                  type: \"checkbox\",\n                  name: \"question0\",\n                  title:\n                    \"Please rank these impacts by fears. Where 1 is the impact your fear the most and 5 you fear the least. Please select numbers in front of the impact text accordingly\",\n                  renderAs: \"prettycheckbox\",\n                  choices: [\n                    \"Privacy\",\n                    \"Confidentiality\",\n                    \"Integrity\",\n                    \"Availability\",\n                    \"Authenticity\"\n                  ]\n                },\n\n                {\n                  type: \"radiogroup\",\n                  name: \"question0\",\n                  renderAs: \"prettycheckbox\",\n                  title:\n                    \"Please rank these impacts by fears. Where 1 is the impact your fear the most and 5 you fear the least. Please select numbers in front of the impact text accordingly\",\n\n                  choices: [\n                    \"Privacy\",\n                    \"Confidentiality\",\n                    \"Integrity\",\n                    \"Availability\",\n                    \"Authenticity\"\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n\n        {\n          name: \"page4\",\n          elements: [\n            {\n              type: \"panel\",\n              name: \"panel4\",\n\n              elements: [\n                {\n                  type: \"matrixdropdown\",\n                  name: \"question2\",\n                  title:\n                    \"Please rank these impacts by fears. Where 1 is the impact your fear the most and 5 you fear the least. Please select numbers in front of the impact text accordingly\",\n                  columns: [\n                    {\n                      cellType: \"rating\",\n                      \" name\": \"level\",\n                      title: \"Level\",\n                      minRateDescription: \"most\",\n                      maxRateDescription: \"least\"\n                    },\n                    {\n                      name: \"comments\",\n                      title: \"Comments/Precision\",\n                      cellType: \"text\"\n                    }\n                  ],\n                  choices: [1],\n                  cellType: \"checkbox\",\n                  rows: [\n                    \"Privacy\",\n                    \"Confidentiality\",\n                    \"Integrity\",\n                    \"Availability\",\n                    \"Authenticity\"\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n\n        {\n          name: \"page5\",\n          elements: [\n            {\n              type: \"panel\",\n              name: \"panel5\",\n\n              elements: [\n                {\n                  type: \"matrixdropdown\",\n                  name: \"question3\",\n                  title:\n                    \"Please rank these impacts by fears. Where 1 is the impact your fear the most and 3 you fear the least. Please select numbers in front of the impact text accordingly\",\n                  columns: [\n                    {\n                      cellType: \"rating\",\n                      \" name\": \"level\",\n                      title: \"Level\",\n\n                      rateValues: [\n                        {\n                          value: \"value1\",\n                          text: \"1\"\n                        },\n                        {\n                          value: \"value2\",\n                          text: \"2\"\n                        },\n                        {\n                          value: \"value3\",\n                          text: \"3\"\n                        }\n                      ]\n                    },\n                    {\n                      name: \"comments2\",\n                      title: \"Comments/Precision\",\n                      cellType: \"text\"\n                    }\n                  ],\n                  choices: [1],\n                  cellType: \"checkbox\",\n                  rows: [\n                    \"Safety\",\n                    \"Reputation & Financial Loss\",\n                    \"Threat Scale\"\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n\n        {\n          name: \"page6\",\n          elements: [\n            {\n              type: \"panel\",\n              name: \"panel6\",\n              elements: [\n                {\n                  type: \"multipletext\",\n                  name: \"pricelimit\",\n                  title: \"From a market point of view: \",\n                  colCount: 2,\n                  items: [\n                    {\n                      name: \"region\",\n                      title:\n                        \"What regions are you willing to sell the solution/products to?\"\n                    },\n                    {\n                      name: \"business\",\n                      title:\n                        \"What type of business are you willing to sell the solutio/product to? \"\n                    }\n                  ]\n                },\n                {\n                  type: \"comment\",\n                  name: \"comment2\",\n                  title: \"Comments/Precision\"\n                }\n              ]\n            }\n          ]\n        },\n\n        {\n          name: \"page7\",\n          title: \"General Considerations\",\n          elements: [\n            {\n              type: \"panel\",\n              name: \"panel7\",\n\n              elements: [\n                {\n                  type: \"checkbox\",\n                  name: \"car\",\n                  title:\n                    \"🔧Why are considering an evaluation/certification of your Solution/Product?\",\n                  // isRequired: true,\n                  hasOther: true,\n                  otherText: \"Others\",\n                  colCount: 4,\n                  // \"choicesOrder\": \"asc\",\n                  choices: [\n                    {\n                      value: \"government\",\n                      text: \"Government bid \"\n                    },\n                    {\n                      value: \"customer\",\n                      text: \"Customer requirement\"\n                    },\n                    {\n                      value: \"nice\",\n                      text: \"Nice to have \"\n                    },\n                    {\n                      value: \"temperature\",\n                      text: \"Temperature\"\n                    },\n                    {\n                      value: \"improve\",\n                      text: \"Improve security\"\n                    },\n                    {\n                      value: \"marketing\",\n                      text: \"Marketing\"\n                    },\n                    {\n                      value: \"notsure\",\n                      text: \"I'm not sure\"\n                    }\n                  ]\n                },\n\n                {\n                  name: \"comment3\",\n                  title: \"Please comment:\",\n                  type: \"comment\"\n\n                  //\"startWithNewLine\": false,\n                }\n              ]\n            }\n          ]\n        }\n\n        /******************************* End of Likelihood ********************************** */\n      ],\n      showQuestionNumbers: \"off\",\n      completedHtml: \"<p><h4>Security Profile Results !!</h4></p>\"\n    };\n    var surveyRender = !this.state.isCompleted ? (\n      <Survey.Survey\n        json={json}\n        showCompletedPage={false}\n        onComplete={this.onCompleteComponent}\n        preetycheckbox={this.preetycheckbox}\n        //onUpdateQuestionCssClasses={this.onUpdateQuestionCssClasses}\n      />\n    ) : null;\n    var onCompleteComponent = this.state.isCompleted ? (\n      <div>The component after onComplete event</div>\n    ) : null;\n    return (\n      <div>\n        {surveyRender}\n        {onCompleteComponent}\n      </div>\n    );\n  }\n}\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>SurveyJS react example</h1>\n      <h2>Checkbox - none of the above and select all</h2>\n      <SurveyComponent />\n    </div>\n  );\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}